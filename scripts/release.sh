#!/usr/bin/env bash
set -e

# ========== CHECK CLEAN WORKING DIRECTORY ==========
if [[ -n "$(git status --porcelain)" ]]; then
  echo "‚ùå Error: Your working directory is not clean."
  echo "Please commit or stash your changes before running this script."
  exit 1
fi

# ========== CHECK GIT CONFIG ==========
GIT_NAME=$(git config user.name || true)
GIT_EMAIL=$(git config user.email || true)

if [[ -z "$GIT_NAME" || -z "$GIT_EMAIL" ]]; then
  echo "‚ùå Error: Git user.name or user.email is not configured."
  echo "Please configure them using the following commands:"
  echo ""
  echo "  git config --global user.name \"Your Name\""
  echo "  git config --global user.email \"you@example.com\""
  echo ""
  exit 1
fi

# ========== CHECK GH INSTALLED ==========
if ! command -v gh &>/dev/null; then
  echo "‚ùå Error: GitHub CLI (gh) is not installed."
  echo "Please install it first:"
  echo ""
  echo "  macOS: brew install gh"
  echo "  Ubuntu: sudo apt install gh"
  echo "  Windows: winget install --id GitHub.cli"
  echo ""
  echo "Then authenticate with:"
  echo "  gh auth login"
  exit 1
fi

# ========== CHECKOUT MAIN ==========
git fetch origin
git checkout rc
git pull origin rc

# ========== GET NEXT VERSION ==========
VERSION=$(node ./scripts/get-next-release.js origin/release origin/rc | grep VERSION | cut -d'=' -f2)

if [[ -z "$VERSION" ]]; then
  echo "‚ùå Error: Failed to retrieve version."
  exit 1
fi

echo "üì¶ Next Version: $VERSION"


# ========== CREATE PR ==========
gh pr create \
  --base release \
  --head "$BRANCH_NAME" \
  --title "[RELEASE][STAGING] ${VERSION}" \
  --body "This Pull Request is generated by \`./release.sh\` script by @${GIT_NAME}"

git checkout origin/main

echo "‚úÖ Pull request created successfully!"
